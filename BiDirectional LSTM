#Listing 4.2  Lines 30 through 38 before changing the code to create a bidirectional LSTM model
 input_layer = Input(shape = (x_train.shape[1], 1))
 lstm1=LSTM(100,activation='relu',return_sequences=True)\
   (input_layer) 
 drop1 = Dropout(0.1)(lstm1) 
 lstm2 = LSTM(120, activation='relu',\  
   return_sequences=True)(drop1)  
 lstm3 = LSTM(80, activation='relu',\  
   return_sequences=True)(lstm2)
 lstm4 = LSTM(50, activation='relu')(lstm3) 
 output_layer = Dense(1)(lstm4)  
 model = Model(input_layer, output_layer) 
 model.compile(optimizer='adam', loss='mse')


#Lines 30 through 38 after changing lines 31, 33, 34, and 35 to create a bidirectional LSTM model

 input_layer = Input(shape = (x_train.shape[1], 1))
 lstm1=Bidirectional(LSTM(100,activation='relu',
 return_sequences=True))(input_layer) 
 drop1 = Dropout(0.1)(lstm1) 
 lstm2 = Bidirectional(LSTM(120, activation='relu',    
return_sequences=True))(drop1) 
 lstm3 = Bidirectional(LSTM(80, activation='relu',  
   return_sequences=True))(lstm2)
 lstm4 = Bidirectional(LSTM(50,  
   activation='relu'))(lstm3) 
 output_layer = Dense(1)(lstm4)  
 model = Model(input_layer, output_layer) 
 model.compile(optimizer='adam', loss='mse')
